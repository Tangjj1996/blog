---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import { formatDate, formDateTime } from "../libs/utils";

type Props = CollectionEntry<"blog">["data"] & {
  prevPost: CollectionEntry<"blog"> | null;
  nextPost: CollectionEntry<"blog"> | null;
};

const {
  title,
  description,
  pubDate,
  updatedDate,
  heroImage,
  prevPost,
  nextPost,
} = Astro.props;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
    <style>
      main {
        width: calc(100% - 2em);
        max-width: 100%;
        margin: 0;
      }
      .hero-image {
        width: 100%;
      }
      .hero-image img {
        display: block;
        margin: 0 auto;
        border-radius: 12px;
        box-shadow: var(--box-shadow);
      }
      .prose {
        width: 720px;
        max-width: calc(100% - 2em);
        margin: auto;
        padding: 1em;
        color: rgb(var(--gray-dark));
      }
      .title {
        margin-bottom: 1em;
        padding: 1em 0;
        text-align: center;
        line-height: 1;
      }
      .title h1 {
        margin: 0 0 0.5em 0;
      }
      .date {
        margin-bottom: 0.5em;
        color: rgb(var(--gray));
      }
      .last-updated-on {
        font-style: italic;
      }

      ol {
        list-style-type: decimal;
        padding-left: 20px;
        margin-top: 10px;
        margin-bottom: 15px;
      }

      ul {
        list-style-type: disc;
        padding-left: 20px;
        margin-top: 10px;
        margin-bottom: 15px;
      }

      li {
        font-size: 16px;
        line-height: 1.5;
        color: #555;
        margin-bottom: 8px;
      }
    </style>
  </head>

  <body>
    <Header />
    <main>
      <article>
        <div class="hero-image">
          {
            heroImage && (
              <img
                width={1020}
                height={510}
                src={heroImage}
                alt=""
                class="w-[1020px] h-[510px]"
              />
            )
          }
        </div>
        <div class="prose">
          <div class="title">
            <div class="date">
              {formatDate(pubDate)}
              {
                updatedDate && (
                  <div class="last-updated-on">
                    修改于 {formDateTime(updatedDate)}
                  </div>
                )
              }
            </div>
            <h1>{title}</h1>
            <hr />
          </div>
          <slot />
        </div>
      </article>
    </main>
    <footer
      style={{ width: "calc(100% - 2em)", padding: "3em 6em" }}
      class="flex justify-between items-center"
    >
      {
        prevPost ? (
          <a href={`/blog/${prevPost.slug}`} class="">
            {prevPost.data.title}
          </a>
        ) : (
          <div />
        )
      }
      {
        nextPost ? (
          <a href={`/blog/${nextPost.slug}`}>{nextPost.data.title}</a>
        ) : (
          <div />
        )
      }
    </footer>
  </body>
</html>
